{"version":3,"file":"static/js/9867.93cc4e41.chunk.js","mappings":"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","sources":["components/BlogPostsBlock/index.tsx","hooks/useGetAllPosts.ts","components/AuthorBlock/index.tsx","common/IFrame/index.tsx","hooks/useGetPostInfo.ts","hooks/useGetMarkdownFile.ts","pages/Blog/index.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { BlogPostsBlockProps } from \"./types\";\nimport { BlogPost } from \"../../pages/Blog/types\";\n\nimport \"./styles.scss\";\nimport Image from \"../../common/Image\";\nimport { Badge, Card, Col, Row } from \"antd\";\nimport { Slide } from \"react-awesome-reveal\";\nimport useGetAllPosts from \"../../hooks/useGetAllPosts\";\n\nconst BlogPostsBlock = ({ title, isHomePage }: BlogPostsBlockProps) => {\n  var posts = useGetAllPosts();\n  if(isHomePage) posts = posts?.slice(0, 4);\n\n  if (!isHomePage) {\n    return (\n      <div className=\"other-posts\">\n        <h2>{title}</h2>\n        <ul className=\"post-list\">\n          {posts?.map((post: BlogPost, index: number) => (\n            <li key={post.id} className=\"post-item\">\n              <Image src={post.imageUrl} key={index} className=\"thumbnail\"></Image>\n              <div className=\"post-info\">\n                <a href={`#/blog/${post.id}`}><h3 className=\"post-title\">{post.title}</h3></a>\n                <p className=\"post-description\">\n                  {post.description}\n                </p>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  } else {\n    return (\n      <section id=\"blog\" className=\"blog-section\">\n        <Slide direction=\"right\" triggerOnce>\n          <Row align={\"middle\"} justify={\"center\"}>\n            <Col>\n              <Slide direction=\"left\" triggerOnce>\n                <Row justify=\"center\" align=\"middle\" className=\"title\">\n                  <h6>{title}</h6>\n                </Row>\n                <Row justify={\"center\"} align={\"middle\"}>\n                  {posts?.map((post: BlogPost, index: number) => (\n                    <Col lg={6} md={12} sm={12} xs={24} className=\"post-card\" key={index}>\n                      <Badge.Ribbon text={\"New\"} color=\"blue\" className={post.isNew ? \"ribbon\" : \"ribbon hidden\"} placement=\"start\">\n                        <Card className=\"home-posts\" hoverable cover={<Image src={post.imageUrl} key={index} className=\"home-page-thumbnail\"></Image>}>\n                          <a href={`#/blog/${post.id}`}>\n                            <p>{post.title}</p>\n                            <span>{post.description}</span>\n                          </a>\n                        </Card>\n                      </Badge.Ribbon>\n                    </Col>\n                  ))}\n                </Row>\n              </Slide>\n            </Col>\n          </Row>\n        </Slide>\n      </section>\n    );\n  }\n};\n\nexport default BlogPostsBlock;\n","import { useEffect, useState } from \"react\";\nimport { BlogPost } from \"../pages/Blog/types\";\nimport BlogPostContent from \"../content/BlogPostsContent.json\";\n\nconst useGetAllPosts = () => {\n\tconst [postInfo, setPostInfo] = useState<BlogPost[]>();\n\n\tuseEffect(() => {\n\t\tconst loadPostInfo = async () => {\n\t\t\ttry {\n\t\t\t\tsetPostInfo(BlogPostContent);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(\"Error loading post info:\", error);\n\t\t\t}\n\t\t};\n\t\tloadPostInfo();\n\t}, []);\n\n\treturn postInfo;\n};\n\nexport default useGetAllPosts;","import { GithubFilled, LinkedinFilled, YoutubeFilled } from \"@ant-design/icons\";\nimport { Popover } from \"antd\";\nimport { withTranslation } from \"react-i18next\";\nimport \"./styles.scss\";\n\nconst AuthorBlock = ({publishDate}: any) => {\n  return (\n    <Popover\n      overlayStyle={{ width: 300 }}\n      content={\n        <div>\n          <img src=\"img/author.jpg\" alt=\"Author\" className=\"author-picture\" />\n          <br></br>\n          <strong>Pablo Gonzalez</strong>\n          <br></br>\n          <span>\n            Frontend Engineer. Apaixonado por desenvolvimento de interfaces\n            limpas e intuitivas.\n          </span>\n          <br></br>\n          <div className=\"social-links\">\n            <a href=\"https://www.linkedin.com/in/pablogonzalezzz/\">\n              <LinkedinFilled />\n            </a>\n            <a href=\"https://www.youtube.com/@PabloGonzalez_dev\">\n              <YoutubeFilled />\n            </a>\n            <a href=\"https://github.com/pablogonzalezz\">\n              <GithubFilled />\n            </a>\n          </div>\n        </div>\n      }\n    >\n      <img src=\"img/author.jpg\" alt=\"Author\" className=\"author-picture\" />\n      <div className=\"author-info\">\n        <p className=\"author-name\">Pablo Gonzalez</p>\n        <p className=\"publish-date\">Published on {publishDate}</p>\n      </div>\n    </Popover>\n  );\n};\n\nexport default withTranslation()(AuthorBlock);\n","\nimport { IFrameProps } from \"../types\";\nimport \"./styles.scss\";\n\nconst IFrame = ({ src }: IFrameProps) => (\n    <iframe \n    width=\"560\" \n    height=\"315\" \n    className=\"embed-video\" \n    src={src} \n    title=\"YouTube video player\" \n    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" \n    allowFullScreen></iframe>\n);\n\nexport default IFrame;\n","import { useEffect, useState } from \"react\";\nimport { BlogPost } from \"../pages/Blog/types\";\nimport useGetAllPosts from \"./useGetAllPosts\";\n\nconst useGetPostInfo = (postId: string) => {\n  const [postInfo, setPostInfo] = useState<BlogPost>();\n  const allPostInfo = useGetAllPosts();\n\n  useEffect(() => {\n    const loadPostInfo = async () => {\n      try {\n        const postInfo = allPostInfo?.find((post: any) => post.id === postId);\n        setPostInfo(postInfo);\n        document.title = postInfo?.title || \"Blog Post\";\n      } catch (error) {\n        console.error(\"Error loading post info:\", error);\n      }\n    };\n\n    if (postId) {\n      loadPostInfo();\n    }\n  }, [postId, allPostInfo]);\n\n  return postInfo;\n}\n\nexport default useGetPostInfo;","import { useEffect, useState } from \"react\";\n\nconst useGetMarkdownFile = (path: string) => {\n  const [content, setContent] = useState<string>(\"\");\n  useEffect(() => {\n    const fetchMarkdownFile = async (filename: string): Promise<string> => {\n      const response = await fetch(`markdown/${filename}.md`);\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      return response.text();\n    };\n    const loadMarkdown = async () => {\n      try {\n        const markdownContent = await fetchMarkdownFile(path);\n        setContent(markdownContent);\n      } catch (error) {\n        console.error(\"Error loading markdown file:\", error);\n        setContent(\"# Error\\nCould not load the blog post.\");\n      }\n    };\n    if (path) {\n      loadMarkdown();\n    }\n  }, [path]);\n  return content;\n};\n\nexport default useGetMarkdownFile;","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport ReactMarkdown from \"react-markdown\";\nimport \"./styles.scss\";\nimport AuthorBlock from \"../../components/AuthorBlock\";\nimport BlogPostsBlock from \"../../components/BlogPostsBlock\";\nimport IFrame from \"../../common/IFrame\";\nimport useGetPostInfo from \"../../hooks/useGetPostInfo\";\nimport useGetMarkdownFile from \"../../hooks/useGetMarkdownFile\";\nimport { Skeleton } from \"antd\";\n\nconst Blog: React.FC = () => {\n  const { filename } = useParams<{ filename: string }>();\n  const content = useGetMarkdownFile(filename);\n  const postInfo = useGetPostInfo(filename);\n\n  // If the content is not loaded yet, show a loading skeleton\n  if (!content) {\n    return (\n      <div className=\"blog-container\">\n        <div className=\"blog-meta\">\n          <Skeleton active avatar paragraph={{ rows: 2 }} />\n        </div>\n        <hr className=\"separator-line\" />\n        {postInfo?.videoUrl ?\n          <Skeleton.Image /> : null}\n        <Skeleton active paragraph={{ rows: 10 }} />\n        <hr className=\"separator-line\" />\n        <BlogPostsBlock title={\"Other posts\"}></BlogPostsBlock>\n      </div>\n    );\n    // If the post info is not loaded yet, show a not found message\n  } else if (!postInfo) {\n    return (\n      <div className=\"blog-container\">\n        <div className=\"not-found\">\n          <hr className=\"separator-line\" />\n          <h1>Post not found 😔</h1>\n          <p>It seems like the post you are looking for does not exist.</p>\n          <a href=\"#/home\">Go back to the home page</a>\n          <hr className=\"separator-line\" />\n        </div>\n        <BlogPostsBlock title={\"Other posts\"}></BlogPostsBlock>\n      </div>\n    );\n  }\n  else {\n    return (\n      <div className=\"blog-container\">\n        <div className=\"blog-meta\">\n          <AuthorBlock publishDate={postInfo?.publishDate} />\n        </div>\n        <hr className=\"separator-line\" />\n        {postInfo?.videoUrl ?\n          <IFrame src={postInfo?.videoUrl}></IFrame> : null}\n        <ReactMarkdown>{content}</ReactMarkdown>\n        <hr className=\"separator-line\" />\n        <BlogPostsBlock title={\"Other posts\"}></BlogPostsBlock>\n      </div>\n    );\n  }\n\n};\n\nexport default Blog;\n"],"names":["_ref","_posts","title","isHomePage","_posts3","_posts2","posts","useGetAllPosts","slice","_jsx","id","className","children","Slide","direction","triggerOnce","Row","align","justify","Col","_jsxs","map","post","index","lg","md","sm","xs","Badge","Ribbon","text","color","isNew","placement","Card","hoverable","cover","Image","src","imageUrl","href","description","postInfo","setPostInfo","useState","useEffect","async","BlogPostContent","error","console","loadPostInfo","withTranslation","publishDate","Popover","overlayStyle","width","content","alt","LinkedinFilled","YoutubeFilled","GithubFilled","height","allow","allowFullScreen","postId","allPostInfo","find","document","path","setContent","markdownContent","response","fetch","filename","ok","Error","fetchMarkdownFile","loadMarkdown","Blog","useParams","useGetMarkdownFile","useGetPostInfo","AuthorBlock","videoUrl","IFrame","ReactMarkdown","BlogPostsBlock","Skeleton","active","avatar","paragraph","rows"],"sourceRoot":""}